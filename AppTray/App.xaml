<Application
    x:Class="AppTray.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:AppTray.Views.Converters"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    StartupUri="Views/MainWindow.xaml">
    <Application.Resources>
        <c:ImageSourceMultiBindConverter x:Key="ImageSourceMultiConverter" />
        <c:ApplicationInfoForAutoCompleteConverter x:Key="AppInfoAutoCompleteConverter" />
        <c:ApplicationNameMultiBindConverter x:Key="AppNameMultiConverter" />
        <c:ContextMenuEnableMultiBindConverter x:Key="ContextMenuEnableMultiConverter" />

        <sys:Boolean x:Key="BoolTrue">True</sys:Boolean>
        <sys:Boolean x:Key="BoolFalse">False</sys:Boolean>

        <!--  うまく使えないのでとりあえずコメントアウト  -->
        <!--<Style x:Key="SystemMenuItemStyleKey" TargetType="{x:Type MenuItem}">
            <Setter Property="Command" Value="{Binding ApplicationCloseCommand, Mode=TwoWay}" />
            <Setter Property="CommandParameter" Value="{Binding ElementName=MainWindow1, Mode=TwoWay}" />
            <Setter Property="Background" Value="AliceBlue" />
        </Style>-->

        <!--  タイトルバー用のコンテキストメニュー  -->

        <!--<CompositeCollection x:Key="SystemMenuItems" x:Shared="False">
            <MenuItem Header="Help" InputGestureText="F1"></MenuItem>
            <MenuItem Header="アプリケーション設定" />
            <MenuItem Header="新しいページ" Command="vm:MyCommands.MenuItemClickCommand" IsEnabled="True" />
            <MenuItem Header="現在のページを削除" />
            <Separator />
            <MenuItem Header="Exit">
        -->
        <!--<i:Interaction.Behaviors>
                    <b:MenuItemClickBehavior Command="{Binding ApplicationCloseCommand, Mode=TwoWay}" Parameter="{Binding ElementName=MainWindow1}" />
                </i:Interaction.Behaviors>-->
        <!--
            </MenuItem>
        </CompositeCollection>
        <ContextMenu x:Key="SystemMenu" ItemsSource="{Binding Source={StaticResource SystemMenuItems}}" />-->

        <SolidColorBrush x:Key="NavigaterActiveColor" Color="Blue" />
        <SolidColorBrush x:Key="NavigaterDeActiveColor" Color="Black" />
        <SolidColorBrush x:Key="NavigaterStrokeColor" Color="DimGray" />

        <!--  通常時のボタンの色  -->
        <SolidColorBrush x:Key="NormalTextBlockBrash" Color="WhiteSmoke" />
        <!--  通常時のボタンの色  -->
        <SolidColorBrush x:Key="NormalButtonBrush" Color="#151515" />
        <!--  通常時のボタンの背景色  -->
        <SolidColorBrush x:Key="NormalBackgroundBrush" Color="Transparent" />
        <!--  マウスオーバー時のボタンの色  -->
        <SolidColorBrush x:Key="HoverButtonBrush" Color="#ffffff" />
        <!--  マウスオーバー時のボタンの背景色  -->
        <SolidColorBrush x:Key="HoverBackgroundBrush" Color="#66ffffff" />
        <!--    -->
        <SolidColorBrush x:Key="MenuItemForegroundBrush" Color="Black" />

        <Style x:Key="WhiteText" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{StaticResource NormalTextBlockBrash}" />
        </Style>

        <!--  アプリケーション登録ボタン  -->
        <Style x:Key="ApplicationButton" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{StaticResource NormalButtonBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            Name="HoverButtonBorder"
                            Background="{StaticResource NormalBackgroundBrush}"
                            BorderBrush="{StaticResource NormalButtonBrush}"
                            BorderThickness="1">
                            <!--<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />-->
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="33" />
                                </Grid.RowDefinitions>
                                <Image
                                    Grid.Row="0"
                                    Margin="0,5,0,2"
                                    Stretch="Uniform">
                                    <Image.Source>
                                        <MultiBinding Converter="{StaticResource ImageSourceMultiConverter}">
                                            <Binding Path="ButtonInfo" />
                                            <Binding Path="Tag" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Button}}" />
                                        </MultiBinding>
                                    </Image.Source>
                                </Image>
                                <TextBlock
                                    Grid.Row="1"
                                    Margin="2,0,2,0"
                                    Foreground="{StaticResource NormalTextBlockBrash}"
                                    TextWrapping="Wrap">
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource AppNameMultiConverter}">
                                            <Binding Path="ButtonInfo" />
                                            <Binding Path="Tag" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Button}}" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--  マウスオーバー  -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="HoverButtonBorder" Property="BorderBrush" Value="{StaticResource HoverButtonBrush}" />
                                <Setter TargetName="HoverButtonBorder" Property="Background" Value="{StaticResource HoverBackgroundBrush}" />
                                <Setter Property="Foreground" Value="{StaticResource HoverButtonBrush}" />
                            </Trigger>
                            <!--  ボタンを押した時に、背景色を透過  -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="HoverButtonBorder" Property="Background" Value="{StaticResource NormalBackgroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu Tag="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                        <MenuItem
                            Command="{Binding ExecuteAppAsAdminCommand}"
                            CommandParameter="{Binding Tag, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                            Header="管理者として実行">
                            <MenuItem.Icon>
                                <Image Source="{Binding ShieldImage}" />
                            </MenuItem.Icon>
                            <MenuItem.IsEnabled>
                                <MultiBinding Converter="{StaticResource ContextMenuEnableMultiConverter}">
                                    <Binding Path="ButtonInfo" />
                                    <Binding Path="Tag" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}" />
                                </MultiBinding>
                            </MenuItem.IsEnabled>
                        </MenuItem>
                        <MenuItem
                            Command="{Binding CallSettingWindowCommand}"
                            CommandParameter="{Binding Tag, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                            Header="設定" />
                        <MenuItem
                            Command="{Binding DeleteAppCommand}"
                            CommandParameter="{Binding Tag, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                            Header="削除">
                            <MenuItem.IsEnabled>
                                <MultiBinding Converter="{StaticResource ContextMenuEnableMultiConverter}">
                                    <Binding Path="ButtonInfo" />
                                    <Binding Path="Tag" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}" />
                                </MultiBinding>
                            </MenuItem.IsEnabled>
                        </MenuItem>
                    </ContextMenu>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
