<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="clr-namespace:AppTray.Views.Behaviors"
    xmlns:c="clr-namespace:AppTray.Views.Converters"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">
    <!--  アプリケーション登録ボタン  -->
    <Style x:Key="ApplicationButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource NormalButtonBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Name="HoverButtonBorder"
                        Background="{DynamicResource NormalBackgroundBrush}"
                        BorderBrush="{DynamicResource NormalButtonBrush}"
                        BorderThickness="1">
                        <!--<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />-->
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="33" />
                            </Grid.RowDefinitions>
                            <Image
                                Grid.Row="0"
                                Margin="0,5,0,2"
                                Stretch="Uniform">
                                <Image.Source>
                                    <MultiBinding Converter="{c:ImageSourceMultiBindConverter}">
                                        <Binding Path="ButtonInfo" />
                                        <Binding Path="Tag" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Button}}" />
                                    </MultiBinding>
                                </Image.Source>
                            </Image>
                            <TextBlock
                                Grid.Row="1"
                                Margin="2,0,2,0"
                                Foreground="{StaticResource NormalTextBlockBrash}"
                                TextTrimming="CharacterEllipsis"
                                TextWrapping="Wrap"
                                ToolTip="{Binding Path=Text, RelativeSource={RelativeSource Self}}"
                                ToolTipService.IsEnabled="True">
                                <TextBlock.Text>
                                    <MultiBinding Converter="{c:ApplicationNameMultiBindConverter}">
                                        <Binding Path="ButtonInfo" />
                                        <Binding Path="Tag" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Button}}" />
                                    </MultiBinding>
                                </TextBlock.Text>
                                <i:Interaction.Behaviors>
                                    <b:ButtonToolTipBehavior RowCount="2">
                                        <b:ButtonToolTipBehavior.TextOriginal>
                                            <MultiBinding Converter="{c:ApplicationNameMultiBindConverter}">
                                                <Binding Path="ButtonInfo" />
                                                <Binding Path="Tag" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Button}}" />
                                            </MultiBinding>
                                        </b:ButtonToolTipBehavior.TextOriginal>
                                    </b:ButtonToolTipBehavior>
                                </i:Interaction.Behaviors>
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--  マウスオーバー  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HoverButtonBorder" Property="BorderBrush" Value="{StaticResource HoverButtonBrush}" />
                            <Setter TargetName="HoverButtonBorder" Property="Background" Value="{StaticResource HoverBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource HoverButtonBrush}" />
                        </Trigger>
                        <!--  ボタンを押した時に、背景色を透過  -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="HoverButtonBorder" Property="Background" Value="{StaticResource NormalBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu Tag="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                    <MenuItem
                        Command="{Binding ExecuteAppAsAdminCommand}"
                        CommandParameter="{Binding Tag, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                        Header="管理者として実行">
                        <MenuItem.Icon>
                            <Image Source="{Binding ShieldImage}" />
                        </MenuItem.Icon>
                        <MenuItem.IsEnabled>
                            <MultiBinding Converter="{c:ContextMenuEnableMultiBindConverter}">
                                <Binding Path="ButtonInfo" />
                                <Binding Path="Tag" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}" />
                            </MultiBinding>
                        </MenuItem.IsEnabled>
                    </MenuItem>
                    <MenuItem
                        Command="{Binding CallSettingWindowCommand}"
                        CommandParameter="{Binding Tag, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                        Header="設定" />
                    <!--<MenuItem
                        Command="{Binding CallCommandWindowCommand}"
                        CommandParameter="{Binding Tag, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                        Header="コマンドを設定" />-->
                    <!--<MenuItem
                        Command="{Binding CallSubWindowCommand}"
                        CommandParameter="{Binding Tag, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                        Header="TODO:subwindow" />-->
                    <MenuItem
                        Command="{Binding DeleteAppCommand}"
                        CommandParameter="{Binding Tag, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                        Header="削除">
                        <MenuItem.IsEnabled>
                            <MultiBinding Converter="{c:ContextMenuEnableMultiBindConverter}">
                                <Binding Path="ButtonInfo" />
                                <Binding Path="Tag" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}" />
                            </MultiBinding>
                        </MenuItem.IsEnabled>
                    </MenuItem>
                </ContextMenu>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>